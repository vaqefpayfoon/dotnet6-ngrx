dotnet new sln
dotnet new webapi -o API
dotnet sln add API

dotnet new classlib -o Core
dotnet sln add Core

dotnet new classlib -o Infrastructure
dotnet sln add Infrastructure

cd API
dotnet add reference ../Infrastructure

dotnet dev-certs https
dotnet dev-certs https -t => stand for trust


--------------------------------Ef Core Tools------------------------------------------
dotnet tool uninstall --global dotnet-ef
dotnet tool install --global dotnet-ef

dotnet ef migrations add Initial -p ../Infrastructure -s ../API -o Data/Migrations --context StoreContext
dotnet ef migrations remove -p ../Infrastructure -s ../API
dotnet ef database update
--------------------------------------INSTALATION--------------------------------------
dotnet ef migrations add initial --context StoreContext -p Infrastructure -s API -o Data/Migrations

dotnet ef database update --context StoreContext -p Infrastructure -s API


dotnet ef migrations add identity --context AppIdentitydbContext -p Infrastructure -s API -o Data/Migrations

dotnet ef database update --context AppIdentitydbContext -p Infrastructure -s API

bootstrap bootswatch font-awesome ngx-bootstrap ngx-spinner ngx-toastr



***************************** CLIENT *************************************************
@ngrx/store
Store is RxJS powered state management for Angular applications, inspired by Redux. Store is a controlled state container designed to help write performant, consistent applications on top of Angular.


@ngrx/effects
Effects are an RxJS powered side effect model for Store. Effects use streams to provide new sources of actions to reduce state based on external interactions such as network requests, web socket messages and time-based events.


@ngrx/router-store
Bindings to connect the Angular Router with Store. During each router navigation cycle, multiple actions are dispatched that allow you to listen for changes in the router's state. You can then select data from the state of the router to provide additional information to your application.


@ngrx/entity
Entity State adapter for managing record collections.
Entity provides an API to manipulate and query entity collections.
Reduces boilerplate for creating reducers that manage a collection of models.
Provides performant CRUD operations for managing entity collections.
Extensible type-safe adapters for selecting entity information.


@ngrx/data
NgRx Data is an extension that offers a gentle introduction to NgRx by simplifying management of entity data while reducing the amount of explicitness.


@ngrx/schematics
Scaffolding library for Angular applications using NgRx libraries.
Schematics provides Angular CLI commands for generating files when building new NgRx feature areas and expanding existing ones. Built on top of Schematics, this tool integrates with the Angular CLI.
